server {
    listen 80 default_server;
    listen 81 default_server;
    listen [::]:80 default_server;
    listen [::]:81 default_server;
    server_name localhost;
    index index.html index.htm;
    client_max_body_size 20M;
    fastcgi_param REMOTE_ADDR       $remote_addr;
    fastcgi_param QUERY_STRING      $query_string;
    fastcgi_param REQUEST_METHOD    $request_method;
    fastcgi_param CONTENT_TYPE      $content_type;
    fastcgi_param CONTENT_LENGTH    $content_length;
    fastcgi_param REQUEST_URI       $request_uri;
    fastcgi_read_timeout 4800;

    port_in_redirect off;

    root /www/data;

    location ~ ^/api/0\.6/map(\.json)?(\?(.*))?$ {
        if (-f $document_root/status.html) {
            return 503;
        }
        fastcgi_pass   cgimap:3001;
    }
    location ~ ^/api/0\.6/(node|way|relation)/[[:digit:]]+$ {
        if (-f $document_root/status.html) {
            return 503;
        }
        fastcgi_pass   cgimap:3001;
    }
    location ~ ^/api/0\.6/(way|relation)/[[:digit:]]+/full$ {
        if (-f $document_root/status.html) {
            return 503;
        }
        fastcgi_pass   cgimap:3001;
    }
    location ~ ^/api/0\.6/(nodes|ways|relations)(\?(.*))?$ {
        if (-f $document_root/status.html) {
            return 503;
        }
        fastcgi_pass   cgimap:3001;
    }

    # Looks for static files.
    #
    # Then it looks for status.html, which is how we give the user updates
    # on various stack operations.
    #
    # We can't return a 503 on root or the health check will fail and
    # the load balancer will panic and shut down everything.
    location ~ .*  {
        try_files $uri /status.html @rails;
    }

    location @rails {
        proxy_pass http://rails:3000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_connect_timeout       4800;
        proxy_send_timeout          4800;
        proxy_read_timeout          4800;
        send_timeout                4800;
    }

    error_page 503 @status;
    location @status {
        rewrite ^(.*)$ /status.html break;
    }
}